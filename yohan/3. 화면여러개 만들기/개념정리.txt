1.1) 화면은 액티비티로 구현.
어플리케이션의 구성요소: 액티비티, 서비스, 브로드캐스트 수신자, 내용제공자 . 이중에 우리는 주로 액티비티,서비스, 그리고 브로드캐스트 수신자를 사용할 것이다.
* 이 구성요소는 시스템에서 관리하게 된다.
* set contentview(R.layout.~): 인플레이터역할을 해준다.
* extra에 있는 데이터는 시스템이 해석하지 않고 그대로 다른 액티비티에 전송하게 된다.


메니페스트 xml 파일의 용도: 어플리케이션의 구성요소를 확인하는 파일이다. 따라서 우리가 구성요소를 추가하거나 수정을 한다면 manifest 파일의 내용에도  추가나 수정과정이 이루어진다.
메인 액티비티 안에 들어있는 버튼을 눌렀을 때 새로운 액티비티를 화면에 보여주고 싶다면 startActivity나 startActivityForResult(이건 무언가를 반환하는 작업도 필요할 경우에 사용) 메소드를 사용할 수 있다.
이러한 메소드를 호출하려면 intent라는 객체가 필요하다.
intent란?: 화면을 실행하는 것은 시스템에서 담당, 따라서 시스템이 읽을 수 있는 포멧으로 데이터를 변환해야한다. 이 포멧이 intent인 것이다.
*명시적 인텐트, 암시적 인텐트
*인텐트의 대표적 속성: 범주(category, 액션이 실행되는데 필요한 추가정보 제공), 타입(인텐트에 들어가는 데이터의 mimi 타입을 명시적으로 지정), 컴포넌트(인텐트에 사용될  컴포넌트 클래스 이름을 명시적으로 지정) , 부가데이터(Extra, 추가정보를 넣을 수 있도록 Bundle 객체에 담고 있다. 시스템에서 extra를 그대로 전송하기 때문에 데이터를 전송할 때 사용한다)
* 명시적 인텐트는 parameter이 조금씩 다를 수 있다. 책의 예시에서는 intent(String action, [Uri uri])가 쓰인 듯 하다.
* intent 파라미터: 원하는 action을 인스턴스, 
* 액티비티뿐만 아니라 서비스나 브로드캐스트 리시버에 대해서도 인텐트를 이용해 정보를 주고 받을 수 있다.
* 인텐트에 들어있는 정보중에 가장 중요한 것은 액션 정보이다.(아마 첫번째 parameter로 예상된다. 
* startActivity(intent)를 쓰면 시스템에 intent가 전달된다.

2-1) 액티비티들은 액티비티 스택이라는 장소에 쌓인다고 보면 된다.
근데 같은 액티비티가 쌓이는 상황에서는 굳이 새로 쌓을 필요없이 재사용을 하면 된다. 이렇게 일정한 옵션을 intent에 줄 수 있는데 이 옵션을 flag라고 한다
flag의 종류: single_top, clear_top (위에것을 없애줌)
extra데이터를 통해 액티비티간에 데이터를 전달할 수 있다고 했는데, putextra.() : 넣어준다. getextra(): 꺼내준다. 이런 메소드를 사용하면 된다.
근데 Extra는 primitivetype(boolean, string 등)의 데이터를 전달한다. 그게 아니라 
객체를 전달하고 싶다고 한다면 Serializable을 사용하면 된다.
근데 그렇게하면 원치않는 정보까지 저장하게 되면서  용량이 커지는 문제가 발생한다
그래서 안드로이드에서는 그 대신 Parcelable을 만들것을 권장한다.


3.수명주기 이해하기
대표적인 상태정보 : 실행(액티비티 스택 최상위 위치, 포커스를 갖고 있음),일시중지(사용자에게 보이긴 하지만 다른 것이 위에 있어 포커스(전체가 보이는 것을 의미하는 듯)를 받지 못하는 상태, ex) 대화상자가 위에 있어서 일부가 가려져 있는 상태 ) ,중지( 다른 액티비티에 의해 완전히 가려져 있는 상태 의미)  등

수명주기: 새로운 액티비티->실행->일시정지->중지->소멸 
이 과정속에서 상태변화를 명령하는 메소드들이 실행된다.
pause와 resume모두 화면이 중지되는 시점의 상황이기 때문에 두가지가중요하다
이 때 데이터는 주로 onpause()에 하게 된다. 그렇게되면 pause로 갔다가 resume이 됬을 때 데이터가 복구된다.

4. 서비스 사용하기
서비스: 앱을 실행했을 때 사용자에게 보이는 화면의 단위를 액티비티라고 하듯 사용자에게 보이지는 않지만 필요한 기능을 수행할 수 있는 것이 있따.
이렇게 화면없이 백그라운드에서 실행되는 하나의 단위를 서비스라고 한다.서비스 또한 어플리케이션의 구성요소이므로 manifest파일에 추가해야한다.
방법; 시작-> startservice() 호출-> 서비스 oncreate->ondestroy()해도 시스템은 다시 자동으로 재시작을 해준다.
서비스는 ondestoy()를 해줘도 자동 재시작 되기 때문에 수명주기가 무한이다.

5. 브로드캐스트 수신자 사용하기
브로드캐스트 리시버를 설정을 해야만 설정된 리시버에게만 딱 인텐트를 전달받을 수 잇다.이것도 서비스와 마찬가지로UI가 존재하지 않는다.
주로 SMS데이터를 처리하는 상황에서 사용된다 수신자를 만들지 않으면 모든 곳에 인텐트가 전달되기때문에 이런 글로벌 인텐트에 대해서  수신자를 꼭 만들어줘야한다.
-브로드캐스트 수신자만 만드는것으로 끝나면 안된다. 브로드캐스트 인텐트가 엄청 많은데 그걸 다 받겠다는 얘기가 되기때문에 자신이 등록한 인텐트만 받도록 하는 과정을 거쳐야 한다.
-그럼 브로드캐스트에서 보낸 인텐트를 액티비티에 나타내는 것은 어떻게 할 수 있을까 
-일단 extra를 뽑아내려면 get으로 뽑아낸다.




